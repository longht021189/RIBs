package ${package_name}

@${rib_name}Builder.${rib_name}Scope
class ${rib_name}Interactor @javax.inject.Inject constructor(
  presenter: dagger.Lazy<${rib_name}Builder.${rib_name}Presenter>,
  router: dagger.Lazy<${rib_name}Router>
) : com.uber.rib.core.Interactor<${rib_name}Builder.${rib_name}Presenter, ${rib_name}Router>(presenter, router) {

    override fun didBecomeActive(savedInstanceState: com.uber.rib.core.Bundle?) {
        super.didBecomeActive(savedInstanceState)

        // TODO: Add attachment logic here (RxSubscriptions, etc.).
    }

    override fun willResignActive() {
        super.willResignActive()

        // TODO: Perform any required clean up here, or delete this method entirely if not needed.
    }
}
