package ${package_name}

import com.uber.rib.core.Bundle
import com.uber.rib.core.NavigationInteractor
import com.uber.rib.core.navigation.Navigation
import dagger.Lazy
import javax.inject.Inject

@${rib_name}Builder.${rib_name}Scope
class ${rib_name}Interactor @Inject constructor(
    presenter: Lazy<${rib_name}Presenter>,
    router: Lazy<${rib_name}Router>,
    navigation: Lazy<Navigation>
) : NavigationInteractor<${rib_name}Interactor.${rib_name}Presenter, ${rib_name}Router>(
    presenter, router, navigation, TODO("Back Stack Name Here"), NAME
) {
    override fun didBecomeActive(savedInstanceState: Bundle?, child: String?, data: Any?) {
        // TODO: Add attachment logic here (RxSubscriptions, etc.).
    }

    interface ${rib_name}Presenter

    companion object {
        const val NAME = "${rib_name_to_upper}"
    }
}
